/* Modules */
loadmodule "extensions/chm_adminonly.so";
loadmodule "extensions/chm_operonly.so";
loadmodule "extensions/chm_sslonly.so";
loadmodule "extensions/chm_operonly_compat.so";
loadmodule "extensions/chm_quietunreg_compat.so";
loadmodule "extensions/chm_sslonly_compat.so";
loadmodule "extensions/extb_account.so";
loadmodule "extensions/extb_canjoin.so";
loadmodule "extensions/extb_channel.so";
loadmodule "extensions/extb_extgecos.so";
loadmodule "extensions/extb_oper.so";
loadmodule "extensions/extb_realname.so";
loadmodule "extensions/extb_server.so";
loadmodule "extensions/extb_ssl.so";
loadmodule "extensions/hurt.so";
loadmodule "extensions/ip_cloaking_4.0.so";
loadmodule "extensions/m_findforwards.so";
loadmodule "extensions/m_identify.so";
loadmodule "extensions/no_oper_invis.so";
loadmodule "extensions/sno_farconnect.so";
loadmodule "extensions/sno_globalkline.so";
loadmodule "extensions/sno_globaloper.so";
loadmodule "extensions/sno_whois.so";
loadmodule "extensions/override.so";

serverinfo {
        name = "chat.parted.me";
        sid = "33B";
        description = "Hangouts IRC Server";
        network_name = "HangoutsNET";
        network_desc = "The Hangouts Network";
        hub = no;
};

admin {
        name = "Parted Cloud";
        description = "Alicorn of Mathematics";
        email = "<bee@parted.me>";
};

log {
        fname_userlog = "logs/userlog";
        fname_fuserlog = "logs/fuserlog";
        fname_operlog = "logs/operlog";
        fname_foperlog = "logs/foperlog";
        fname_serverlog = "logs/serverlog";
        fname_klinelog = "logs/klinelog";
        fname_killlog = "logs/killlog";
        fname_operspylog = "logs/operspylog";
        fname_ioerrorlog = "logs/ioerror";
};

class "users" {
        ping_time = 5 minutes; /* mobile devices */

        /* large numbers here because everyone will be on localhost */
        number_per_ident = 100;
        number_per_ip = 100;
        number_per_ip_global = 100;
        cidr_ipv4_bitlen = 24; /* Default */
        cidr_ipv6_bitlen = 64; /* Default */
        number_per_cidr = 100;
        max_number = 100;

        sendq = 4 megabytes; /* Why not? */
};

class "opers" {
        ping_time = 5 minutes; /* mobile devices */

        /* large numbers here because everyone will be on localhost */
        number_per_ident = 100;
        number_per_ip = 100;
        number_per_ip_global = 100;
        cidr_ipv4_bitlen = 24; /* Default */
        cidr_ipv6_bitlen = 64; /* Default */
        number_per_cidr = 100;
        max_number = 100;

        sendq = 4 megabytes; /* Why not? */
};

class "server" {
        ping_time = 5 minutes;
        connectfreq = 5 minutes;
        max_number = 2;
        sendq = 4 megabytes;
};

listen {
        defer_accept = yes;
        host = "127.0.0.1";
        port = 1337, 1338; /* 1337 for clients, 1338 for Atheme */
};

auth {
        user = "*@*";
        spoof = "hangouts.net";
        class = "users";
        flags = no_tilde, flood_exempt;
};

privset "server_bot" {
        privs = oper:local_kill, oper:operwall, oper:kline,
                oper:remoteban, snomask:nick_changes;
};

privset "admin" {
        extends = "server_bot";
        privs = oper:global_kill, oper:routing, oper:unkline, oper:xline,
                oper:resv, oper:mass_notice, oper:admin, oper:die,
                oper:rehash, oper:spy;
};

connect "services.hangouts.net" {
        host = "127.0.0.1";
        send_password = "redacted";
        accept_password = "redacted";
        port = 1338;
        hub_mask = "*";
        class = "server";
};

cluster {
        name = "services.hangouts.net";
        flags = all;
};

service {
        name = "services.hangouts.net";
};

shared {
        oper = "*@localhost";
        flags = all;
};

exempt {
        ip = "127.0.0.1";
};

channel {
        use_invex = yes; /* Enables +I */
        use_except = yes; /* Enables +e */
        use_forward = yes; /* Enables +f */

        /* Knocking is probably going to be an edge case for us,
           so the defaults should all suffice here */
        use_knock = yes; /* Enables knocking */
        knock_delay = 5 minutes;
        knock_delay_channel = 1 minute;

        max_chans_per_user = 100; /* Whoo! */
        max_bans = 100;
        max_bans_large = 100;
        default_split_user_count = 0;
        default_split_server_count = 0;
        no_create_on_split = no;
        no_join_on_split = no;
        burst_topicwho = yes;
        kick_on_split_riding = no;
        only_ascii_channels = no;
        resv_forcepart = yes;
        channel_target_change = yes;
        disable_local_channels = no;
};

serverhide {
        flatten_links = no;
        links_delay = 5 minutes;
        hidden = no;
        disable_hidden = no;
};

/* Blacklist omitted as everyone will be connecting from localhost */

alias "NickServ" {
        target = "NickServ";
};

alias "ChanServ" {
        target = "ChanServ";
};

alias "OperServ" {
        target = "OperServ";
};

alias "MemoServ" {
        target = "MemoServ";
};

alias "BotServ" {
        target = "BotServ";
};

alias "GroupServ" {
        target = "GroupServ";
};

alias "NS" {
        target = "NickServ";
};

alias "CS" {
        target = "ChanServ";
};

alias "HS" {
        target = "HostServ";
};

alias "OS" {
        target = "OperServ";
};

alias "MS" {
        target = "MemoServ";
};

alias "BS" {
        target = "BotServ";
};

alias "GS" {
        target = "GroupServ";
};

general {
        hide_error_messages = no; /* All localhost anyway */
        hide_spoof_ips = yes;
        default_umodes = "+ix"; /* Gives cloaking automagically! */

        /* Vanity */
        default_operstring = "is an Alicorn";
        default_adminstring = "is an Alicorn";
        servicestring = "is a Royal Guard";

        disable_fake_channels = no;
        tkline_expire_notices = yes;
        default_floodcount = 100;
        failed_oper_notice = yes;
        dots_in_ident = 2;
        min_nonwildcard = 1;
        min_nonwildcard_simple = 1;
        max_accept = 100;
        max_monitor = 100;
        anti_nick_flood = yes;
        max_nick_time = 10 seconds;
        max_nick_changes = 10;
        anti_spam_exit_message_time = 5 minutes;
        ts_warn_delta = 30 seconds;
        ts_max_delta = 5 minutes;
        client_exit = yes; /* Prepends with Quit: */
        collision_fnc = yes;
        resv_fnc = yes;
        global_snotices = yes;
        dline_with_reason = yes;
        kline_delay = 0 seconds;
        kline_reason = "User has been klined from this server";
        identify_service = "NickServ@services.hangouts.net";
        identify_command = "IDENTIFY";
        non_redundant_klines = yes;
        warn_no_nline = yes;
        use_propagated_bans = yes;
        stats_e_disabled = no;
        stats_c_oper_only =  no;
        stats_h_oper_only = no;
        stats_y_oper_only = no;
        stats_o_oper_only = yes;
        stats_P_oper_only = no;
        stats_i_oper_only = masked;
        stats_k_oper_only = masked;
        map_oper_only = no;
        operspy_admin_only = no;
        operspy_dont_care_user_info = no;
        caller_id_wait = 1 minute;
        pace_wait_simple = 1 second;
        pace_wait = 1 second;
        short_motd = no;
        ping_cookie = no;
        connect_timeout = 30 seconds;
        default_ident_timeout = 1;
        disable_auth = no;
        no_oper_flood = yes;
        max_targets = 1;
        use_whois_actually = yes;
        oper_only_umodes = operwall, locops, servnotice;
        oper_umodes = locops, servnotice, operwall, wallop;
        oper_snomask = "+s";
        burst_away = yes;
        nick_delay = 0 seconds;
        reject_ban_time = 1 minute;
        reject_after_count = 3;
        reject_duration = 5 minutes;
        throttle_duration = 1;
        throttle_count = 1000;

        /* The official config says don't change these without
           extensive testing/understanding what they do */
        client_flood_max_lines = 20;
        client_flood_burst_rate = 40;
        client_flood_burst_max = 5;
        client_flood_message_time = 1;
        client_flood_message_num = 2;
        max_ratelimit_tokens = 30;

        away_interval = 30;
};

modules {
        path = "/usr/local/charybdis/modules";
        path = "/usr/local/charybdis/modules/autoload";
};

/* Includes (redacted) */
.include "opers.conf"
